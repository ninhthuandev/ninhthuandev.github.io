{"version":3,"sources":["pages/crypto-tools/message-digest/js/message-digest.js"],"names":["text2Unit8Array","string","encoding","TextEncoder","encode","s","encodeURIComponent","decode","decodeURIComponent","escape","document","addEventListener","log","utf8String","console","md5","Alpine","store","selectedType","input","output","usingHmac","hmacKey","autoGenerate","isType","event","type","changeInput","generateOutput","target","value","this","selectedTypeDisplayName","displayName","sha256","arrayBuffer","shake128","shake256","window","toLowerCase"],"mappings":"aAAA,SAASA,gBAAgBC,EAAQC,GAAjC,OACsB,IAAIC,aADjBH,OAAgBC,GAGzB,SAAAG,OAAAC,GAEA,OAASD,SAAUE,mBAAAD,IAInB,SAASE,OAAOF,GACZ,OAAOG,mBAAmBC,OAASJ,IAGvCK,SACaC,iBAAW,cAAA,WACpB,IAEQC,EAAIC,gBAFI,SAEO,eAEvBC,QAAQF,IAAIZ,GACZc,QAAQF,IAAIG,IAAIf,IAEhBgB,QAAOC,IAAMjB,gBAAiB,QAAA,UAC1BkB,QAAAA,IAAYH,IAAEf,gBAAK,QAAA,WAEnBmB,OAAOF,MAAE,gBAAA,CACTG,aAAU,MACVC,wBAAgB,MAChBC,MAAW,GACXC,OAAY,GAEZC,WAAM,EACFF,QAAW,GACdC,cAAA,EAEGT,OAAQF,SAAAA,GACHO,OAAQM,KAAKP,eAAaQ,GAG3BC,YAAKC,SAAAA,GACTd,QAAAF,IAAAa,EAAAI,OAAAC,OACHC,KAAAZ,MAAAM,EAAAI,OAAAC,MAEQZ,KAAAA,cACAc,KAAAA,kBAITJ,mBAAc,SAAAF,EAAAE,GACVd,KAAWI,aAAMA,EAEba,KAAKZ,wBAAcc,EAEfF,KAAKH,kBALjBA,eAOgB,WAGA,GAFJd,QAAKF,IAAAmB,KAAUb,cAEX,KAAAa,KAAAZ,MACC,OAAAY,KAAUb,cACNE,IAAM,gBACXW,KAAAX,OAAAc,OAAAA,OAAAC,YAAAJ,KAAAZ,QACJ,MACSC,IAAM,WACXW,KAAAX,OAAAgB,SAAAL,KAAAZ,MAAA,KACR,MAEG,IAAA,WACaY,KAAAX,OAAAiB,SAAAN,KAAAZ,MAAA,KACpB,MACJ,QACFY,KAAAX,OAAAkB,OAAAP,KAAAb,aAAAqB,eAAAR,KAAAZ,YAHUY,KAAKX,OAAS","file":"message-digest.js","sourcesContent":["function text2Unit8Array(string, encoding) {\r\n    let textEncoder = new TextEncoder();\r\n    return textEncoder.encode(string);\r\n}\r\n\r\nfunction encode(s) {\r\n    return unescape(encodeURIComponent(s));\r\n}\r\n\r\nfunction decode(s) {\r\n    return decodeURIComponent(escape(s));\r\n}\r\n\r\ndocument.addEventListener('alpine:init', () => {\r\n    const str = 'Thuбєn';\r\n    const utf8String = text2Unit8Array(str, 'window-1251');\r\n\r\n    console.log(utf8String);\r\n    console.log(md5(utf8String));\r\n    console.log(text2Unit8Array('Thuận', 'utf-8'));\r\n    console.log(md5(text2Unit8Array('Thuận', 'utf-8')))\r\n\r\n    Alpine.store('messageDigest', {\r\n        selectedType: 'MD5',\r\n        selectedTypeDisplayName: 'MD5',\r\n        input: '',\r\n        output: '',\r\n        usingHmac: false,\r\n        hmacKey: '',\r\n        autoGenerate: true,\r\n\r\n        isType(type) {\r\n            return this.selectedType === type;\r\n        },\r\n        changeInput(event) {\r\n            console.log(event.target.value)\r\n            this.input = event.target.value;\r\n\r\n            if (this.autoGenerate) {\r\n                this.generateOutput();\r\n            }\r\n        },\r\n        updateSelectedType(type, displayName) {\r\n            this.selectedType = type;\r\n            this.selectedTypeDisplayName = displayName;\r\n\r\n            this.generateOutput();\r\n        },\r\n        generateOutput() {\r\n            console.log(this.selectedType);\r\n\r\n            if (this.input !== '') {\r\n                switch (this.selectedType) {\r\n                    case 'DOUBLE_SHA256':\r\n                        this.output = sha256(sha256.arrayBuffer(this.input));\r\n                        break;\r\n                    case 'SHAKE128':\r\n                        this.output = shake128(this.input, 256);\r\n                        break;\r\n                    case 'SHAKE256':\r\n                        this.output = shake256(this.input, 512);\r\n                        break;\r\n                    default:\r\n                        this.output = window[this.selectedType.toLowerCase()](this.input);\r\n                        break;\r\n                }\r\n\r\n            } else {\r\n                this.output = '';\r\n            }\r\n        },\r\n    })\r\n});"]}