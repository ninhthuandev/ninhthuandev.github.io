{"version":3,"sources":["pages/crypto-tools/message-digest/js/message-digest.js"],"names":["document","addEventListener","Alpine","store","selectedType","selectedTypeDisplayName","supportedHmac","supportedFile","input","output","usingHmac","usingFile","autoGenerate","this","isType","type","setInput","value","generateOutput","changeInput","event","target","changeInputWithFile","file","files","reader","onload","e","result","readAsArrayBuffer","changeSecret","updateSelectedType","displayName","arguments","length","undefined","changeUsingFile","getElementById","console","window","toLowerCase","hmac","secretKey","sha256","arrayBuffer"],"mappings":"aAAAA,SAASC,iBAAiB,cAAe,WACrCC,OAAOC,MAAM,gBAAiB,CAD1BC,aAACH,MACCI,wBAAwB,MAC1BD,eAAmB,EACnBC,eAAAA,EACAC,MAAAA,GACAC,OAAAA,GACAC,WAAS,EACTC,WAAU,EACVC,UAAW,GACXC,cAAgB,EAEhBC,OAAAA,SAAAA,GAEM,OAAAC,KAAAC,eAAOC,GAEZC,SAAA,SAAAC,GACOJ,KAAAL,MAAAQ,EAGKJ,KAAAA,cACAM,KAAAA,kBAGbC,YAAW,SAAAC,GACFJ,KAAAA,SAAeK,EAAMA,OAAOJ,QAErCK,oBAAmB,SAAAF,GAAAE,IAAAA,EAAAA,KAAQC,EAAAH,EAAAC,OAAAG,MAAA,GACVJ,EAAMC,IAAOG,WAGpBC,EAAOC,OAAG,SAAAC,GACPX,EAAAA,SAAWK,EAAOO,OAAOA,SAIrCH,EAAAI,kBAAAN,IAEGO,aAAc,SAAAV,GAEVP,KAAKD,UAAcQ,EAAAC,OAAAJ,MAEvBJ,KAAAD,cACHC,KAAAK,kBAEGa,mBAAoBhB,SAAAA,EAAIiB,GAAA,IAAA1B,IAAA,EAAA2B,UAAAC,aAAAC,IAAAF,UAAA,KAAAA,UAAA,GACnB5B,KAAAA,aAAAA,EACAC,KAAAA,wBAA6B0B,EAC7BzB,KAAAA,cAAwC,SAApBD,EAEpBO,KAAKP,cAAe,kBAAAS,EAEzBF,KAAAP,gBAEUC,KAAAA,WAAe,GAIpBW,KAAAA,eACRL,KAAAuB,iBAAA,GAGMpB,KAAAA,kBAEPoB,gBAAe,SAAAnB,GACPJ,KAACF,UAAYM,EACbJ,KAACG,SAAYH,KAAAL,QAGbR,gBAASqC,SAAAA,GACbxB,KAAAF,UAAAM,EACHJ,KAAAG,SAAA,IAEcH,KAACF,YACHH,SAAU6B,eAAI,YAAApB,MAAA,KAF3BC,eAKgB,WAHZ,GADAoB,QAKqB7B,IAAAA,mBACL,KAAAI,KAAAL,MACR,GAAAK,KAAAH,UACGG,KAAAT,aAEMS,KAAeJ,OAAA8B,OAAA1B,KAAAT,aAAAoC,eAAAC,KAAA5B,KAAA6B,UAAA7B,KAAAL,YAIXC,OAAS8B,KAAAA,cACd,IAAA,gBACR1B,KAAAJ,OAAAkC,OAAAA,OAAAC,YAAA/B,KAAAL,QACJ,MACG,QACaK,KAAAJ,OAAA8B,OAAA1B,KAAAT,aAAAoC,eAAA3B,KAAAL,YAAhBK,KAAKJ,OAAS","file":"message-digest.js","sourcesContent":["document.addEventListener('alpine:init', () => {\r\n    Alpine.store('messageDigest', {\r\n        selectedType: 'MD5',\r\n        selectedTypeDisplayName: 'MD5',\r\n        supportedHmac: true,\r\n        supportedFile: true,\r\n        input: '',\r\n        output: '',\r\n        usingHmac: false,\r\n        usingFile: false,\r\n        secretKey: '',\r\n        autoGenerate: true,\r\n\r\n        isType(type) {\r\n            return this.selectedType === type;\r\n        },\r\n        setInput(value) {\r\n            this.input = value;\r\n\r\n            if (this.autoGenerate) {\r\n                this.generateOutput();\r\n            }\r\n        },\r\n        changeInput(event) {\r\n            this.setInput(event.target.value);\r\n        },\r\n        changeInputWithFile(event) {\r\n            const file = event.target.files[0];\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = (e) => {\r\n                this.setInput(e.target.result);\r\n            };\r\n\r\n            reader.readAsArrayBuffer(file);\r\n        },\r\n        changeSecret(event) {\r\n            this.secretKey = event.target.value;\r\n\r\n            if (this.autoGenerate) {\r\n                this.generateOutput();\r\n            }\r\n        },\r\n        updateSelectedType(type, displayName, supportedHmac = true) {\r\n            this.selectedType = type;\r\n            this.selectedTypeDisplayName = displayName;\r\n            this.supportedHmac = supportedHmac === 'true';\r\n            this.supportedFile = type !== 'DOUBLE_SHA256';\r\n\r\n            if (!this.supportedHmac) {\r\n                this.usingHmac = false;\r\n            }\r\n\r\n            if (!this.supportedFile) {\r\n                this.changeUsingFile(false);\r\n            }\r\n\r\n            this.generateOutput();\r\n        },\r\n        changeUsingHmac(value) {\r\n          this.usingHmac = value;\r\n          this.setInput(this.input)\r\n        },\r\n        changeUsingFile(value) {\r\n            this.usingFile = value;\r\n            this.setInput('');\r\n\r\n            if (!this.usingFile) {\r\n                document.getElementById('formFile').value = '';\r\n            }\r\n        },\r\n        generateOutput() {\r\n            console.log(\"Generate output\");\r\n            if (this.input !== '') {\r\n                if (this.usingHmac) {\r\n                    switch (this.selectedType) {\r\n                        default:\r\n                            this.output = window[this.selectedType.toLowerCase()].hmac(this.secretKey, this.input);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    switch (this.selectedType) {\r\n                        case 'DOUBLE_SHA256':\r\n                            this.output = sha256(sha256.arrayBuffer(this.input));\r\n                            break;\r\n                        default:\r\n                            this.output = window[this.selectedType.toLowerCase()](this.input);\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                this.output = '';\r\n            }\r\n        },\r\n    })\r\n});"]}