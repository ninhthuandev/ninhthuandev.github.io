{"version":3,"sources":["pages/qr-code-tools/qr-code-generator/js/canvas2svg.js"],"names":["STYLES","ctx","CanvasGradient","CanvasPattern","namedEntities","format","str","args","keys","Object","i","length","replace","RegExp","randomString","holder","randomstring","Error","chars","Math","floor","random","items","radix","base10","lookup","split","createNamedToNumberedLookup","entity","parseInt","svg","svgAttr","canvas","apply","font","gradientNode","this","__ctx","prototype","__createElement","offset","color","regex","matches","stop","setAttribute","exec","r","g","b","__root","appendChild","pattern","o","options","defaultOptions","width","height","enableMirroring","arguments","undefined","__document","document","__canvas","getContext","__groupStack","createElementNS","__setDefaultStyles","__stack","__getStyleState","__defs","__currentElement","elementName","properties","resetFill","key","element","__applyStyleState","styleState","__applyStyleToCurrentElement","type","currentElement","__currentElementsToStyle","currentStyleGroup","children","forEach","node","style","value","id","childNodes","getAttribute","__ids","indexOf","attr","globalAlpha","opacity","nodeName","parentNode","getSerializedSvg","fixNamedEntities","regexp","serialized","XMLSerializer","serializeToString","test","__closestGroupOrSvg","getSvg","xmlns","save","group","parent","push","restore","pop","state","__addTransform","t","__applyCurrentDefaultPath","transform","scale","x","y","rotate","angle","PI","degrees","cx","cy","translate","a","c","d","e","f","path","__currentDefaultPath","__currentPosition","console","error","command","moveTo","beginPath","__addPathCommand","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","cpy","normalize","len","sqrt","vector","arcTo","x1","y1","x2","y2","radius","x0","y0","unit_vec_p1_p0","unit_vec_p1_p2","cos","theta","acos","abs","unit_vec_p1_origin","len_p1_origin","sin","unit_vec_origin_start_tangent","unit_vec_origin_end_tangent","getAngle","startAngle","endAngle","lineTo","arc","stroke","fill","rect","strokeRect","rootGroup","removeChild","clearRect","createLinearGradient","gradientUnits","grad","createRadialGradient","r0","r1","__clearCanvas","current","__parseFont","fontPart","data","family","weight","href","decoration","__fontHref","__wrapTextLink","setAttributeNS","__applyText","text","action","textBaseline","getTextAnchor","mapping","textElement","size","font-style","font-weight","text-decoration","text-anchor","textAlign","left","right","center","start","end","dominant-baseline","hanging","top","bottom","middle","alphabetic","createTextNode","fillText","strokeText","measureText","counterClockwise","endX","endY","startX","startY","sweepFlag","largeArcFlag","diff","rx","ry","xAxisRotation","clip","clipPath","newGroup","dx","dy","defs","image","dw","sw","dh","sh","translateDirective","transformDirective","originTransform","svgImage","drawImage","slice","sx","sy","createElement","toDataURL","createPattern","repetition","img","setLineDash","dashArray","lineDash","join","drawFocusRing","setTransform","window","_typeof","module","exports"],"mappings":"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","file":"canvas2svg.js","sourcesContent":["/*!!\r\n *  Canvas 2 Svg v1.0.19\r\n *  A low level canvas to SVG converter. Uses a mock canvas context to build an SVG document.\r\n *\r\n *  Licensed under the MIT license:\r\n *  http://www.opensource.org/licenses/mit-license.php\r\n *\r\n *  Author:\r\n *  Kerry Liu\r\n *\r\n *  Copyright (c) 2014 Gliffy Inc.\r\n */\r\n\r\n;(function () {\r\n    \"use strict\";\r\n\r\n    var STYLES, ctx, CanvasGradient, CanvasPattern, namedEntities;\r\n\r\n    //helper function to format a string\r\n    function format(str, args) {\r\n        var keys = Object.keys(args), i;\r\n        for (i=0; i<keys.length; i++) {\r\n            str = str.replace(new RegExp(\"\\\\{\" + keys[i] + \"\\\\}\", \"gi\"), args[keys[i]]);\r\n        }\r\n        return str;\r\n    }\r\n\r\n    //helper function that generates a random string\r\n    function randomString(holder) {\r\n        var chars, randomstring, i;\r\n        if (!holder) {\r\n            throw new Error(\"cannot create a random attribute name for an undefined object\");\r\n        }\r\n        chars = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\r\n        randomstring = \"\";\r\n        do {\r\n            randomstring = \"\";\r\n            for (i = 0; i < 12; i++) {\r\n                randomstring += chars[Math.floor(Math.random() * chars.length)];\r\n            }\r\n        } while (holder[randomstring]);\r\n        return randomstring;\r\n    }\r\n\r\n    //helper function to map named to numbered entities\r\n    function createNamedToNumberedLookup(items, radix) {\r\n        var i, entity, lookup = {}, base10, base16;\r\n        items = items.split(',');\r\n        radix = radix || 10;\r\n        // Map from named to numbered entities.\r\n        for (i = 0; i < items.length; i += 2) {\r\n            entity = '&' + items[i + 1] + ';';\r\n            base10 = parseInt(items[i], radix);\r\n            lookup[entity] = '&#'+base10+';';\r\n        }\r\n        //FF and IE need to create a regex from hex values ie &nbsp; == \\xa0\r\n        lookup[\"\\\\xa0\"] = '&#160;';\r\n        return lookup;\r\n    }\r\n\r\n    //helper function to map canvas-textAlign to svg-textAnchor\r\n    function getTextAnchor(textAlign) {\r\n        //TODO: support rtl languages\r\n        var mapping = {\"left\":\"start\", \"right\":\"end\", \"center\":\"middle\", \"start\":\"start\", \"end\":\"end\"};\r\n        return mapping[textAlign] || mapping.start;\r\n    }\r\n\r\n    //helper function to map canvas-textBaseline to svg-dominantBaseline\r\n    function getDominantBaseline(textBaseline) {\r\n        //INFO: not supported in all browsers\r\n        var mapping = {\"alphabetic\": \"alphabetic\", \"hanging\": \"hanging\", \"top\":\"text-before-edge\", \"bottom\":\"text-after-edge\", \"middle\":\"central\"};\r\n        return mapping[textBaseline] || mapping.alphabetic;\r\n    }\r\n\r\n    // Unpack entities lookup where the numbers are in radix 32 to reduce the size\r\n    // entity mapping courtesy of tinymce\r\n    namedEntities = createNamedToNumberedLookup(\r\n        '50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,' +\r\n        '5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,' +\r\n        '5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,' +\r\n        '5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,' +\r\n        '68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,' +\r\n        '6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,' +\r\n        '6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,' +\r\n        '75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,' +\r\n        '7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,' +\r\n        '7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,' +\r\n        'sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,' +\r\n        'st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,' +\r\n        't9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,' +\r\n        'tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,' +\r\n        'u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,' +\r\n        '81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,' +\r\n        '8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,' +\r\n        '8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,' +\r\n        '8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,' +\r\n        '8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,' +\r\n        'nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,' +\r\n        'rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,' +\r\n        'Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,' +\r\n        '80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,' +\r\n        '811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro', 32);\r\n\r\n\r\n    //Some basic mappings for attributes and default values.\r\n    STYLES = {\r\n        \"strokeStyle\":{\r\n            svgAttr : \"stroke\", //corresponding svg attribute\r\n            canvas : \"#000000\", //canvas default\r\n            svg : \"none\",       //svg default\r\n            apply : \"stroke\"    //apply on stroke() or fill()\r\n        },\r\n        \"fillStyle\":{\r\n            svgAttr : \"fill\",\r\n            canvas : \"#000000\",\r\n            svg : null, //svg default is black, but we need to special case this to handle canvas stroke without fill\r\n            apply : \"fill\"\r\n        },\r\n        \"lineCap\":{\r\n            svgAttr : \"stroke-linecap\",\r\n            canvas : \"butt\",\r\n            svg : \"butt\",\r\n            apply : \"stroke\"\r\n        },\r\n        \"lineJoin\":{\r\n            svgAttr : \"stroke-linejoin\",\r\n            canvas : \"miter\",\r\n            svg : \"miter\",\r\n            apply : \"stroke\"\r\n        },\r\n        \"miterLimit\":{\r\n            svgAttr : \"stroke-miterlimit\",\r\n            canvas : 10,\r\n            svg : 4,\r\n            apply : \"stroke\"\r\n        },\r\n        \"lineWidth\":{\r\n            svgAttr : \"stroke-width\",\r\n            canvas : 1,\r\n            svg : 1,\r\n            apply : \"stroke\"\r\n        },\r\n        \"globalAlpha\": {\r\n            svgAttr : \"opacity\",\r\n            canvas : 1,\r\n            svg : 1,\r\n            apply :  \"fill stroke\"\r\n        },\r\n        \"font\":{\r\n            //font converts to multiple svg attributes, there is custom logic for this\r\n            canvas : \"10px sans-serif\"\r\n        },\r\n        \"shadowColor\":{\r\n            canvas : \"#000000\"\r\n        },\r\n        \"shadowOffsetX\":{\r\n            canvas : 0\r\n        },\r\n        \"shadowOffsetY\":{\r\n            canvas : 0\r\n        },\r\n        \"shadowBlur\":{\r\n            canvas : 0\r\n        },\r\n        \"textAlign\":{\r\n            canvas : \"start\"\r\n        },\r\n        \"textBaseline\":{\r\n            canvas : \"alphabetic\"\r\n        },\r\n        \"lineDash\" : {\r\n            svgAttr : \"stroke-dasharray\",\r\n            canvas : [],\r\n            svg : null,\r\n            apply : \"stroke\"\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param gradientNode - reference to the gradient\r\n     * @constructor\r\n     */\r\n    CanvasGradient = function (gradientNode, ctx) {\r\n        this.__root = gradientNode;\r\n        this.__ctx = ctx;\r\n    };\r\n\r\n    /**\r\n     * Adds a color stop to the gradient root\r\n     */\r\n    CanvasGradient.prototype.addColorStop = function (offset, color) {\r\n        var stop = this.__ctx.__createElement(\"stop\"), regex, matches;\r\n        stop.setAttribute(\"offset\", offset);\r\n        if (color.indexOf(\"rgba\") !== -1) {\r\n            //separate alpha value, since webkit can't handle it\r\n            regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\r\n            matches = regex.exec(color);\r\n            stop.setAttribute(\"stop-color\", format(\"rgb({r},{g},{b})\", {r:matches[1], g:matches[2], b:matches[3]}));\r\n            stop.setAttribute(\"stop-opacity\", matches[4]);\r\n        } else {\r\n            stop.setAttribute(\"stop-color\", color);\r\n        }\r\n        this.__root.appendChild(stop);\r\n    };\r\n\r\n    CanvasPattern = function (pattern, ctx) {\r\n        this.__root = pattern;\r\n        this.__ctx = ctx;\r\n    };\r\n\r\n    /**\r\n     * The mock canvas context\r\n     * @param o - options include:\r\n     * ctx - existing Context2D to wrap around\r\n     * width - width of your canvas (defaults to 500)\r\n     * height - height of your canvas (defaults to 500)\r\n     * enableMirroring - enables canvas mirroring (get image data) (defaults to false)\r\n     * document - the document object (defaults to the current document)\r\n     */\r\n    ctx = function (o) {\r\n        var defaultOptions = { width:500, height:500, enableMirroring : false}, options;\r\n\r\n        //keep support for this way of calling C2S: new C2S(width,height)\r\n        if (arguments.length > 1) {\r\n            options = defaultOptions;\r\n            options.width = arguments[0];\r\n            options.height = arguments[1];\r\n        } else if ( !o ) {\r\n            options = defaultOptions;\r\n        } else {\r\n            options = o;\r\n        }\r\n\r\n        if (!(this instanceof ctx)) {\r\n            //did someone call this without new?\r\n            return new ctx(options);\r\n        }\r\n\r\n        //setup options\r\n        this.width = options.width || defaultOptions.width;\r\n        this.height = options.height || defaultOptions.height;\r\n        this.enableMirroring = options.enableMirroring !== undefined ? options.enableMirroring : defaultOptions.enableMirroring;\r\n\r\n        this.canvas = this;   ///point back to this instance!\r\n        this.__document = options.document || document;\r\n\r\n        // allow passing in an existing context to wrap around\r\n        // if a context is passed in, we know a canvas already exist\r\n        if (options.ctx) {\r\n            this.__ctx = options.ctx;\r\n        } else {\r\n            this.__canvas = this.__document.createElement(\"canvas\");\r\n            this.__ctx = this.__canvas.getContext(\"2d\");\r\n        }\r\n\r\n        this.__setDefaultStyles();\r\n        this.__stack = [this.__getStyleState()];\r\n        this.__groupStack = [];\r\n\r\n        //the root svg element\r\n        this.__root = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        this.__root.setAttribute(\"version\", 1.1);\r\n        this.__root.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n        this.__root.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\r\n        this.__root.setAttribute(\"width\", this.width);\r\n        this.__root.setAttribute(\"height\", this.height);\r\n\r\n        //make sure we don't generate the same ids in defs\r\n        this.__ids = {};\r\n\r\n        //defs tag\r\n        this.__defs = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\r\n        this.__root.appendChild(this.__defs);\r\n\r\n        //also add a group child. the svg element can't use the transform attribute\r\n        this.__currentElement = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        this.__root.appendChild(this.__currentElement);\r\n    };\r\n\r\n\r\n    /**\r\n     * Creates the specified svg element\r\n     * @private\r\n     */\r\n    ctx.prototype.__createElement = function (elementName, properties, resetFill) {\r\n        if (typeof properties === \"undefined\") {\r\n            properties = {};\r\n        }\r\n\r\n        var element = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", elementName),\r\n            keys = Object.keys(properties), i, key;\r\n        if (resetFill) {\r\n            //if fill or stroke is not specified, the svg element should not display. By default SVG's fill is black.\r\n            element.setAttribute(\"fill\", \"none\");\r\n            element.setAttribute(\"stroke\", \"none\");\r\n        }\r\n        for (i=0; i<keys.length; i++) {\r\n            key = keys[i];\r\n            element.setAttribute(key, properties[key]);\r\n        }\r\n        return element;\r\n    };\r\n\r\n    /**\r\n     * Applies default canvas styles to the context\r\n     * @private\r\n     */\r\n    ctx.prototype.__setDefaultStyles = function () {\r\n        //default 2d canvas context properties see:http://www.w3.org/TR/2dcontext/\r\n        var keys = Object.keys(STYLES), i, key;\r\n        for (i=0; i<keys.length; i++) {\r\n            key = keys[i];\r\n            this[key] = STYLES[key].canvas;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applies styles on restore\r\n     * @param styleState\r\n     * @private\r\n     */\r\n    ctx.prototype.__applyStyleState = function (styleState) {\r\n        var keys = Object.keys(styleState), i, key;\r\n        for (i=0; i<keys.length; i++) {\r\n            key = keys[i];\r\n            this[key] = styleState[key];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the current style state\r\n     * @return {Object}\r\n     * @private\r\n     */\r\n    ctx.prototype.__getStyleState = function () {\r\n        var i, styleState = {}, keys = Object.keys(STYLES), key;\r\n        for (i=0; i<keys.length; i++) {\r\n            key = keys[i];\r\n            styleState[key] = this[key];\r\n        }\r\n        return styleState;\r\n    };\r\n\r\n    /**\r\n     * Apples the current styles to the current SVG element. On \"ctx.fill\" or \"ctx.stroke\"\r\n     * @param type\r\n     * @private\r\n     */\r\n    ctx.prototype.__applyStyleToCurrentElement = function (type) {\r\n        var currentElement = this.__currentElement;\r\n        var currentStyleGroup = this.__currentElementsToStyle;\r\n        if (currentStyleGroup) {\r\n            currentElement.setAttribute(type, \"\");\r\n            currentElement = currentStyleGroup.element;\r\n            currentStyleGroup.children.forEach(function (node) {\r\n                node.setAttribute(type, \"\");\r\n            })\r\n        }\r\n\r\n        var keys = Object.keys(STYLES), i, style, value, id, regex, matches;\r\n        for (i = 0; i < keys.length; i++) {\r\n            style = STYLES[keys[i]];\r\n            value = this[keys[i]];\r\n            if (style.apply) {\r\n                //is this a gradient or pattern?\r\n                if (value instanceof CanvasPattern) {\r\n                    //pattern\r\n                    if (value.__ctx) {\r\n                        //copy over defs\r\n                        while(value.__ctx.__defs.childNodes.length) {\r\n                            id = value.__ctx.__defs.childNodes[0].getAttribute(\"id\");\r\n                            this.__ids[id] = id;\r\n                            this.__defs.appendChild(value.__ctx.__defs.childNodes[0]);\r\n                        }\r\n                    }\r\n                    currentElement.setAttribute(style.apply, format(\"url(#{id})\", {id:value.__root.getAttribute(\"id\")}));\r\n                }\r\n                else if (value instanceof CanvasGradient) {\r\n                    //gradient\r\n                    currentElement.setAttribute(style.apply, format(\"url(#{id})\", {id:value.__root.getAttribute(\"id\")}));\r\n                } else if (style.apply.indexOf(type)!==-1 && style.svg !== value) {\r\n                    if ((style.svgAttr === \"stroke\" || style.svgAttr === \"fill\") && value.indexOf(\"rgba\") !== -1) {\r\n                        //separate alpha value, since illustrator can't handle it\r\n                        regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\r\n                        matches = regex.exec(value);\r\n                        currentElement.setAttribute(style.svgAttr, format(\"rgb({r},{g},{b})\", {r:matches[1], g:matches[2], b:matches[3]}));\r\n                        //should take globalAlpha here\r\n                        var opacity = matches[4];\r\n                        var globalAlpha = this.globalAlpha;\r\n                        if (globalAlpha != null) {\r\n                            opacity *= globalAlpha;\r\n                        }\r\n                        currentElement.setAttribute(style.svgAttr+\"-opacity\", opacity);\r\n                    } else {\r\n                        var attr = style.svgAttr;\r\n                        if (keys[i] === 'globalAlpha') {\r\n                            attr = type+'-'+style.svgAttr;\r\n                            if (currentElement.getAttribute(attr)) {\r\n                                //fill-opacity or stroke-opacity has already been set by stroke or fill.\r\n                                continue;\r\n                            }\r\n                        }\r\n                        //otherwise only update attribute if right type, and not svg default\r\n                        currentElement.setAttribute(attr, value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Will return the closest group or svg node. May return the current element.\r\n     * @private\r\n     */\r\n    ctx.prototype.__closestGroupOrSvg = function (node) {\r\n        node = node || this.__currentElement;\r\n        if (node.nodeName === \"g\" || node.nodeName === \"svg\") {\r\n            return node;\r\n        } else {\r\n            return this.__closestGroupOrSvg(node.parentNode);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the serialized value of the svg so far\r\n     * @param fixNamedEntities - Standalone SVG doesn't support named entities, which document.createTextNode encodes.\r\n     *                           If true, we attempt to find all named entities and encode it as a numeric entity.\r\n     * @return serialized svg\r\n     */\r\n    ctx.prototype.getSerializedSvg = function (fixNamedEntities) {\r\n        var serialized = new XMLSerializer().serializeToString(this.__root),\r\n            keys, i, key, value, regexp, xmlns;\r\n\r\n        //IE search for a duplicate xmnls because they didn't implement setAttributeNS correctly\r\n        xmlns = /xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi;\r\n        if (xmlns.test(serialized)) {\r\n            serialized = serialized.replace('xmlns=\"http://www.w3.org/2000/svg','xmlns:xlink=\"http://www.w3.org/1999/xlink');\r\n        }\r\n\r\n        if (fixNamedEntities) {\r\n            keys = Object.keys(namedEntities);\r\n            //loop over each named entity and replace with the proper equivalent.\r\n            for (i=0; i<keys.length; i++) {\r\n                key = keys[i];\r\n                value = namedEntities[key];\r\n                regexp = new RegExp(key, \"gi\");\r\n                if (regexp.test(serialized)) {\r\n                    serialized = serialized.replace(regexp, value);\r\n                }\r\n            }\r\n        }\r\n\r\n        return serialized;\r\n    };\r\n\r\n\r\n    /**\r\n     * Returns the root svg\r\n     * @return\r\n     */\r\n    ctx.prototype.getSvg = function () {\r\n        return this.__root;\r\n    };\r\n    /**\r\n     * Will generate a group tag.\r\n     */\r\n    ctx.prototype.save = function () {\r\n        var group = this.__createElement(\"g\");\r\n        var parent = this.__closestGroupOrSvg();\r\n        this.__groupStack.push(parent);\r\n        parent.appendChild(group);\r\n        this.__currentElement = group;\r\n        this.__stack.push(this.__getStyleState());\r\n    };\r\n    /**\r\n     * Sets current element to parent, or just root if already root\r\n     */\r\n    ctx.prototype.restore = function () {\r\n        this.__currentElement = this.__groupStack.pop();\r\n        this.__currentElementsToStyle = null;\r\n        //Clearing canvas will make the poped group invalid, currentElement is set to the root group node.\r\n        if (!this.__currentElement) {\r\n            this.__currentElement = this.__root.childNodes[1];\r\n        }\r\n        var state = this.__stack.pop();\r\n        this.__applyStyleState(state);\r\n    };\r\n\r\n    /**\r\n     * Helper method to add transform\r\n     * @private\r\n     */\r\n    ctx.prototype.__addTransform = function (t) {\r\n        //if the current element has siblings, add another group\r\n        var parent = this.__closestGroupOrSvg();\r\n        if (parent.childNodes.length > 0) {\r\n            if (this.__currentElement.nodeName === \"path\") {\r\n                if (!this.__currentElementsToStyle) this.__currentElementsToStyle = {element: parent, children: []};\r\n                this.__currentElementsToStyle.children.push(this.__currentElement)\r\n                this.__applyCurrentDefaultPath();\r\n            }\r\n\r\n            var group = this.__createElement(\"g\");\r\n            parent.appendChild(group);\r\n            this.__currentElement = group;\r\n        }\r\n\r\n        var transform = this.__currentElement.getAttribute(\"transform\");\r\n        if (transform) {\r\n            transform += \" \";\r\n        } else {\r\n            transform = \"\";\r\n        }\r\n        transform += t;\r\n        this.__currentElement.setAttribute(\"transform\", transform);\r\n    };\r\n\r\n    /**\r\n     *  scales the current element\r\n     */\r\n    ctx.prototype.scale = function (x, y) {\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n        this.__addTransform(format(\"scale({x},{y})\", {x:x, y:y}));\r\n    };\r\n\r\n    /**\r\n     * rotates the current element\r\n     */\r\n    ctx.prototype.rotate = function (angle) {\r\n        var degrees = (angle * 180 / Math.PI);\r\n        this.__addTransform(format(\"rotate({angle},{cx},{cy})\", {angle:degrees, cx:0, cy:0}));\r\n    };\r\n\r\n    /**\r\n     * translates the current element\r\n     */\r\n    ctx.prototype.translate = function (x, y) {\r\n        this.__addTransform(format(\"translate({x},{y})\", {x:x,y:y}));\r\n    };\r\n\r\n    /**\r\n     * applies a transform to the current element\r\n     */\r\n    ctx.prototype.transform = function (a, b, c, d, e, f) {\r\n        this.__addTransform(format(\"matrix({a},{b},{c},{d},{e},{f})\", {a:a, b:b, c:c, d:d, e:e, f:f}));\r\n    };\r\n\r\n    /**\r\n     * Create a new Path Element\r\n     */\r\n    ctx.prototype.beginPath = function () {\r\n        var path, parent;\r\n\r\n        // Note that there is only one current default path, it is not part of the drawing state.\r\n        // See also: https://html.spec.whatwg.org/multipage/scripting.html#current-default-path\r\n        this.__currentDefaultPath = \"\";\r\n        this.__currentPosition = {};\r\n\r\n        path = this.__createElement(\"path\", {}, true);\r\n        parent = this.__closestGroupOrSvg();\r\n        parent.appendChild(path);\r\n        this.__currentElement = path;\r\n    };\r\n\r\n    /**\r\n     * Helper function to apply currentDefaultPath to current path element\r\n     * @private\r\n     */\r\n    ctx.prototype.__applyCurrentDefaultPath = function () {\r\n        var currentElement = this.__currentElement;\r\n        if (currentElement.nodeName === \"path\") {\r\n            currentElement.setAttribute(\"d\", this.__currentDefaultPath);\r\n        } else {\r\n            console.error(\"Attempted to apply path command to node\", currentElement.nodeName);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Helper function to add path command\r\n     * @private\r\n     */\r\n    ctx.prototype.__addPathCommand = function (command) {\r\n        this.__currentDefaultPath += \" \";\r\n        this.__currentDefaultPath += command;\r\n    };\r\n\r\n    /**\r\n     * Adds the move command to the current path element,\r\n     * if the currentPathElement is not empty create a new path element\r\n     */\r\n    ctx.prototype.moveTo = function (x,y) {\r\n        if (this.__currentElement.nodeName !== \"path\") {\r\n            this.beginPath();\r\n        }\r\n\r\n        // creates a new subpath with the given point\r\n        this.__currentPosition = {x: x, y: y};\r\n        this.__addPathCommand(format(\"M {x} {y}\", {x:x, y:y}));\r\n    };\r\n\r\n    /**\r\n     * Closes the current path\r\n     */\r\n    ctx.prototype.closePath = function () {\r\n        if (this.__currentDefaultPath) {\r\n            this.__addPathCommand(\"Z\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds a line to command\r\n     */\r\n    ctx.prototype.lineTo = function (x, y) {\r\n        this.__currentPosition = {x: x, y: y};\r\n        if (this.__currentDefaultPath.indexOf('M') > -1) {\r\n            this.__addPathCommand(format(\"L {x} {y}\", {x:x, y:y}));\r\n        } else {\r\n            this.__addPathCommand(format(\"M {x} {y}\", {x:x, y:y}));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add a bezier command\r\n     */\r\n    ctx.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\r\n        this.__currentPosition = {x: x, y: y};\r\n        this.__addPathCommand(format(\"C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}\",\r\n            {cp1x:cp1x, cp1y:cp1y, cp2x:cp2x, cp2y:cp2y, x:x, y:y}));\r\n    };\r\n\r\n    /**\r\n     * Adds a quadratic curve to command\r\n     */\r\n    ctx.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\r\n        this.__currentPosition = {x: x, y: y};\r\n        this.__addPathCommand(format(\"Q {cpx} {cpy} {x} {y}\", {cpx:cpx, cpy:cpy, x:x, y:y}));\r\n    };\r\n\r\n\r\n    /**\r\n     * Return a new normalized vector of given vector\r\n     */\r\n    var normalize = function (vector) {\r\n        var len = Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1]);\r\n        return [vector[0] / len, vector[1] / len];\r\n    };\r\n\r\n    /**\r\n     * Adds the arcTo to the current path\r\n     *\r\n     * @see http://www.w3.org/TR/2015/WD-2dcontext-20150514/#dom-context-2d-arcto\r\n     */\r\n    ctx.prototype.arcTo = function (x1, y1, x2, y2, radius) {\r\n        // Let the point (x0, y0) be the last point in the subpath.\r\n        var x0 = this.__currentPosition && this.__currentPosition.x;\r\n        var y0 = this.__currentPosition && this.__currentPosition.y;\r\n\r\n        // First ensure there is a subpath for (x1, y1).\r\n        if (typeof x0 == \"undefined\" || typeof y0 == \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        // Negative values for radius must cause the implementation to throw an IndexSizeError exception.\r\n        if (radius < 0) {\r\n            throw new Error(\"IndexSizeError: The radius provided (\" + radius + \") is negative.\");\r\n        }\r\n\r\n        // If the point (x0, y0) is equal to the point (x1, y1),\r\n        // or if the point (x1, y1) is equal to the point (x2, y2),\r\n        // or if the radius radius is zero,\r\n        // then the method must add the point (x1, y1) to the subpath,\r\n        // and connect that point to the previous point (x0, y0) by a straight line.\r\n        if (((x0 === x1) && (y0 === y1))\r\n            || ((x1 === x2) && (y1 === y2))\r\n            || (radius === 0)) {\r\n            this.lineTo(x1, y1);\r\n            return;\r\n        }\r\n\r\n        // Otherwise, if the points (x0, y0), (x1, y1), and (x2, y2) all lie on a single straight line,\r\n        // then the method must add the point (x1, y1) to the subpath,\r\n        // and connect that point to the previous point (x0, y0) by a straight line.\r\n        var unit_vec_p1_p0 = normalize([x0 - x1, y0 - y1]);\r\n        var unit_vec_p1_p2 = normalize([x2 - x1, y2 - y1]);\r\n        if (unit_vec_p1_p0[0] * unit_vec_p1_p2[1] === unit_vec_p1_p0[1] * unit_vec_p1_p2[0]) {\r\n            this.lineTo(x1, y1);\r\n            return;\r\n        }\r\n\r\n        // Otherwise, let The Arc be the shortest arc given by circumference of the circle that has radius radius,\r\n        // and that has one point tangent to the half-infinite line that crosses the point (x0, y0) and ends at the point (x1, y1),\r\n        // and that has a different point tangent to the half-infinite line that ends at the point (x1, y1), and crosses the point (x2, y2).\r\n        // The points at which this circle touches these two lines are called the start and end tangent points respectively.\r\n\r\n        // note that both vectors are unit vectors, so the length is 1\r\n        var cos = (unit_vec_p1_p0[0] * unit_vec_p1_p2[0] + unit_vec_p1_p0[1] * unit_vec_p1_p2[1]);\r\n        var theta = Math.acos(Math.abs(cos));\r\n\r\n        // Calculate origin\r\n        var unit_vec_p1_origin = normalize([\r\n            unit_vec_p1_p0[0] + unit_vec_p1_p2[0],\r\n            unit_vec_p1_p0[1] + unit_vec_p1_p2[1]\r\n        ]);\r\n        var len_p1_origin = radius / Math.sin(theta / 2);\r\n        var x = x1 + len_p1_origin * unit_vec_p1_origin[0];\r\n        var y = y1 + len_p1_origin * unit_vec_p1_origin[1];\r\n\r\n        // Calculate start angle and end angle\r\n        // rotate 90deg clockwise (note that y axis points to its down)\r\n        var unit_vec_origin_start_tangent = [\r\n            -unit_vec_p1_p0[1],\r\n            unit_vec_p1_p0[0]\r\n        ];\r\n        // rotate 90deg counter clockwise (note that y axis points to its down)\r\n        var unit_vec_origin_end_tangent = [\r\n            unit_vec_p1_p2[1],\r\n            -unit_vec_p1_p2[0]\r\n        ];\r\n        var getAngle = function (vector) {\r\n            // get angle (clockwise) between vector and (1, 0)\r\n            var x = vector[0];\r\n            var y = vector[1];\r\n            if (y >= 0) { // note that y axis points to its down\r\n                return Math.acos(x);\r\n            } else {\r\n                return -Math.acos(x);\r\n            }\r\n        };\r\n        var startAngle = getAngle(unit_vec_origin_start_tangent);\r\n        var endAngle = getAngle(unit_vec_origin_end_tangent);\r\n\r\n        // Connect the point (x0, y0) to the start tangent point by a straight line\r\n        this.lineTo(x + unit_vec_origin_start_tangent[0] * radius,\r\n            y + unit_vec_origin_start_tangent[1] * radius);\r\n\r\n        // Connect the start tangent point to the end tangent point by arc\r\n        // and adding the end tangent point to the subpath.\r\n        this.arc(x, y, radius, startAngle, endAngle);\r\n    };\r\n\r\n    /**\r\n     * Sets the stroke property on the current element\r\n     */\r\n    ctx.prototype.stroke = function () {\r\n        if (this.__currentElement.nodeName === \"path\") {\r\n            this.__currentElement.setAttribute(\"paint-order\", \"fill stroke markers\");\r\n        }\r\n        this.__applyCurrentDefaultPath();\r\n        this.__applyStyleToCurrentElement(\"stroke\");\r\n    };\r\n\r\n    /**\r\n     * Sets fill properties on the current element\r\n     */\r\n    ctx.prototype.fill = function () {\r\n        if (this.__currentElement.nodeName === \"path\") {\r\n            this.__currentElement.setAttribute(\"paint-order\", \"stroke fill markers\");\r\n        }\r\n        this.__applyCurrentDefaultPath();\r\n        this.__applyStyleToCurrentElement(\"fill\");\r\n    };\r\n\r\n    /**\r\n     *  Adds a rectangle to the path.\r\n     */\r\n    ctx.prototype.rect = function (x, y, width, height) {\r\n        if (this.__currentElement.nodeName !== \"path\") {\r\n            this.beginPath();\r\n        }\r\n        this.moveTo(x, y);\r\n        this.lineTo(x+width, y);\r\n        this.lineTo(x+width, y+height);\r\n        this.lineTo(x, y+height);\r\n        this.lineTo(x, y);\r\n        this.closePath();\r\n    };\r\n\r\n\r\n    /**\r\n     * adds a rectangle element\r\n     */\r\n    ctx.prototype.fillRect = function (x, y, width, height) {\r\n        var rect, parent;\r\n        rect = this.__createElement(\"rect\", {\r\n            x : x,\r\n            y : y,\r\n            width : width,\r\n            height : height\r\n        }, true);\r\n        parent = this.__closestGroupOrSvg();\r\n        parent.appendChild(rect);\r\n        this.__currentElement = rect;\r\n        this.__applyStyleToCurrentElement(\"fill\");\r\n    };\r\n\r\n    /**\r\n     * Draws a rectangle with no fill\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param height\r\n     */\r\n    ctx.prototype.strokeRect = function (x, y, width, height) {\r\n        var rect, parent;\r\n        rect = this.__createElement(\"rect\", {\r\n            x : x,\r\n            y : y,\r\n            width : width,\r\n            height : height\r\n        }, true);\r\n        parent = this.__closestGroupOrSvg();\r\n        parent.appendChild(rect);\r\n        this.__currentElement = rect;\r\n        this.__applyStyleToCurrentElement(\"stroke\");\r\n    };\r\n\r\n\r\n    /**\r\n     * Clear entire canvas:\r\n     * 1. save current transforms\r\n     * 2. remove all the childNodes of the root g element\r\n     */\r\n    ctx.prototype.__clearCanvas = function () {\r\n        var current = this.__closestGroupOrSvg(),\r\n            transform = current.getAttribute(\"transform\");\r\n        var rootGroup = this.__root.childNodes[1];\r\n        var childNodes = rootGroup.childNodes;\r\n        for (var i = childNodes.length - 1; i >= 0; i--) {\r\n            if (childNodes[i]) {\r\n                rootGroup.removeChild(childNodes[i]);\r\n            }\r\n        }\r\n        this.__currentElement = rootGroup;\r\n        //reset __groupStack as all the child group nodes are all removed.\r\n        this.__groupStack = [];\r\n        if (transform) {\r\n            this.__addTransform(transform);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \"Clears\" a canvas by just drawing a white rectangle in the current group.\r\n     */\r\n    ctx.prototype.clearRect = function (x, y, width, height) {\r\n        //clear entire canvas\r\n        if (x === 0 && y === 0 && width === this.width && height === this.height) {\r\n            this.__clearCanvas();\r\n            return;\r\n        }\r\n        var rect, parent = this.__closestGroupOrSvg();\r\n        rect = this.__createElement(\"rect\", {\r\n            x : x,\r\n            y : y,\r\n            width : width,\r\n            height : height,\r\n            fill : \"#FFFFFF\"\r\n        }, true);\r\n        parent.appendChild(rect);\r\n    };\r\n\r\n    /**\r\n     * Adds a linear gradient to a defs tag.\r\n     * Returns a canvas gradient object that has a reference to it's parent def\r\n     */\r\n    ctx.prototype.createLinearGradient = function (x1, y1, x2, y2) {\r\n        var grad = this.__createElement(\"linearGradient\", {\r\n            id : randomString(this.__ids),\r\n            x1 : x1+\"px\",\r\n            x2 : x2+\"px\",\r\n            y1 : y1+\"px\",\r\n            y2 : y2+\"px\",\r\n            \"gradientUnits\" : \"userSpaceOnUse\"\r\n        }, false);\r\n        this.__defs.appendChild(grad);\r\n        return new CanvasGradient(grad, this);\r\n    };\r\n\r\n    /**\r\n     * Adds a radial gradient to a defs tag.\r\n     * Returns a canvas gradient object that has a reference to it's parent def\r\n     */\r\n    ctx.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\r\n        var grad = this.__createElement(\"radialGradient\", {\r\n            id : randomString(this.__ids),\r\n            cx : x1+\"px\",\r\n            cy : y1+\"px\",\r\n            r  : r1+\"px\",\r\n            fx : x0+\"px\",\r\n            fy : y0+\"px\",\r\n            \"gradientUnits\" : \"userSpaceOnUse\"\r\n        }, false);\r\n        this.__defs.appendChild(grad);\r\n        return new CanvasGradient(grad, this);\r\n\r\n    };\r\n\r\n    /**\r\n     * Parses the font string and returns svg mapping\r\n     * @private\r\n     */\r\n    ctx.prototype.__parseFont = function () {\r\n        var regex = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\\"\\sa-z0-9]+?)\\s*$/i;\r\n        var fontPart = regex.exec( this.font );\r\n        var data = {\r\n            style : fontPart[1] || 'normal',\r\n            size : fontPart[4] || '10px',\r\n            family : fontPart[6] || 'sans-serif',\r\n            weight: fontPart[3] || 'normal',\r\n            decoration : fontPart[2] || 'normal',\r\n            href : null\r\n        };\r\n\r\n        //canvas doesn't support underline natively, but we can pass this attribute\r\n        if (this.__fontUnderline === \"underline\") {\r\n            data.decoration = \"underline\";\r\n        }\r\n\r\n        //canvas also doesn't support linking, but we can pass this as well\r\n        if (this.__fontHref) {\r\n            data.href = this.__fontHref;\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * Helper to link text fragments\r\n     * @param font\r\n     * @param element\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    ctx.prototype.__wrapTextLink = function (font, element) {\r\n        if (font.href) {\r\n            var a = this.__createElement(\"a\");\r\n            a.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", font.href);\r\n            a.appendChild(element);\r\n            return a;\r\n        }\r\n        return element;\r\n    };\r\n\r\n    /**\r\n     * Fills or strokes text\r\n     * @param text\r\n     * @param x\r\n     * @param y\r\n     * @param action - stroke or fill\r\n     * @private\r\n     */\r\n    ctx.prototype.__applyText = function (text, x, y, action) {\r\n        var font = this.__parseFont(),\r\n            parent = this.__closestGroupOrSvg(),\r\n            textElement = this.__createElement(\"text\", {\r\n                \"font-family\" : font.family,\r\n                \"font-size\" : font.size,\r\n                \"font-style\" : font.style,\r\n                \"font-weight\" : font.weight,\r\n                \"text-decoration\" : font.decoration,\r\n                \"x\" : x,\r\n                \"y\" : y,\r\n                \"text-anchor\": getTextAnchor(this.textAlign),\r\n                \"dominant-baseline\": getDominantBaseline(this.textBaseline)\r\n            }, true);\r\n\r\n        textElement.appendChild(this.__document.createTextNode(text));\r\n        this.__currentElement = textElement;\r\n        this.__applyStyleToCurrentElement(action);\r\n        parent.appendChild(this.__wrapTextLink(font,textElement));\r\n    };\r\n\r\n    /**\r\n     * Creates a text element\r\n     * @param text\r\n     * @param x\r\n     * @param y\r\n     */\r\n    ctx.prototype.fillText = function (text, x, y) {\r\n        this.__applyText(text, x, y, \"fill\");\r\n    };\r\n\r\n    /**\r\n     * Strokes text\r\n     * @param text\r\n     * @param x\r\n     * @param y\r\n     */\r\n    ctx.prototype.strokeText = function (text, x, y) {\r\n        this.__applyText(text, x, y, \"stroke\");\r\n    };\r\n\r\n    /**\r\n     * No need to implement this for svg.\r\n     * @param text\r\n     * @return {TextMetrics}\r\n     */\r\n    ctx.prototype.measureText = function (text) {\r\n        this.__ctx.font = this.font;\r\n        return this.__ctx.measureText(text);\r\n    };\r\n\r\n    /**\r\n     *  Arc command!\r\n     */\r\n    ctx.prototype.arc = function (x, y, radius, startAngle, endAngle, counterClockwise) {\r\n        // in canvas no circle is drawn if no angle is provided.\r\n        if (startAngle === endAngle) {\r\n            return;\r\n        }\r\n        startAngle = startAngle % (2*Math.PI);\r\n        endAngle = endAngle % (2*Math.PI);\r\n        if (startAngle === endAngle) {\r\n            //circle time! subtract some of the angle so svg is happy (svg elliptical arc can't draw a full circle)\r\n            endAngle = ((endAngle + (2*Math.PI)) - 0.001 * (counterClockwise ? -1 : 1)) % (2*Math.PI);\r\n        }\r\n        var endX = x+radius*Math.cos(endAngle),\r\n            endY = y+radius*Math.sin(endAngle),\r\n            startX = x+radius*Math.cos(startAngle),\r\n            startY = y+radius*Math.sin(startAngle),\r\n            sweepFlag = counterClockwise ? 0 : 1,\r\n            largeArcFlag = 0,\r\n            diff = endAngle - startAngle;\r\n\r\n        // https://github.com/gliffy/canvas2svg/issues/4\r\n        if (diff < 0) {\r\n            diff += 2*Math.PI;\r\n        }\r\n\r\n        if (counterClockwise) {\r\n            largeArcFlag = diff > Math.PI ? 0 : 1;\r\n        } else {\r\n            largeArcFlag = diff > Math.PI ? 1 : 0;\r\n        }\r\n\r\n        this.lineTo(startX, startY);\r\n        this.__addPathCommand(format(\"A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}\",\r\n            {rx:radius, ry:radius, xAxisRotation:0, largeArcFlag:largeArcFlag, sweepFlag:sweepFlag, endX:endX, endY:endY}));\r\n\r\n        this.__currentPosition = {x: endX, y: endY};\r\n    };\r\n\r\n    /**\r\n     * Generates a ClipPath from the clip command.\r\n     */\r\n    ctx.prototype.clip = function () {\r\n        var group = this.__closestGroupOrSvg(),\r\n            clipPath = this.__createElement(\"clipPath\"),\r\n            id =  randomString(this.__ids),\r\n            newGroup = this.__createElement(\"g\");\r\n\r\n        this.__applyCurrentDefaultPath();\r\n        group.removeChild(this.__currentElement);\r\n        clipPath.setAttribute(\"id\", id);\r\n        clipPath.appendChild(this.__currentElement);\r\n\r\n        this.__defs.appendChild(clipPath);\r\n\r\n        //set the clip path to this group\r\n        group.setAttribute(\"clip-path\", format(\"url(#{id})\", {id:id}));\r\n\r\n        //clip paths can be scaled and transformed, we need to add another wrapper group to avoid later transformations\r\n        // to this path\r\n        group.appendChild(newGroup);\r\n\r\n        this.__currentElement = newGroup;\r\n\r\n    };\r\n\r\n    /**\r\n     * Draws a canvas, image or mock context to this canvas.\r\n     * Note that all svg dom manipulation uses node.childNodes rather than node.children for IE support.\r\n     * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-drawimage\r\n     */\r\n    ctx.prototype.drawImage = function () {\r\n        //convert arguments to a real array\r\n        var args = Array.prototype.slice.call(arguments),\r\n            image=args[0],\r\n            dx, dy, dw, dh, sx=0, sy=0, sw, sh, parent, svg, defs, group,\r\n            currentElement, svgImage, canvas, context, id;\r\n\r\n        if (args.length === 3) {\r\n            dx = args[1];\r\n            dy = args[2];\r\n            sw = image.width;\r\n            sh = image.height;\r\n            dw = sw;\r\n            dh = sh;\r\n        } else if (args.length === 5) {\r\n            dx = args[1];\r\n            dy = args[2];\r\n            dw = args[3];\r\n            dh = args[4];\r\n            sw = image.width;\r\n            sh = image.height;\r\n        } else if (args.length === 9) {\r\n            sx = args[1];\r\n            sy = args[2];\r\n            sw = args[3];\r\n            sh = args[4];\r\n            dx = args[5];\r\n            dy = args[6];\r\n            dw = args[7];\r\n            dh = args[8];\r\n        } else {\r\n            throw new Error(\"Invalid number of arguments passed to drawImage: \" + arguments.length);\r\n        }\r\n\r\n        parent = this.__closestGroupOrSvg();\r\n        currentElement = this.__currentElement;\r\n        var translateDirective = \"translate(\" + dx + \", \" + dy + \")\";\r\n        if (image instanceof ctx) {\r\n            //canvas2svg mock canvas context. In the future we may want to clone nodes instead.\r\n            //also I'm currently ignoring dw, dh, sw, sh, sx, sy for a mock context.\r\n            svg = image.getSvg().cloneNode(true);\r\n            if (svg.childNodes && svg.childNodes.length > 1) {\r\n                defs = svg.childNodes[0];\r\n                while(defs.childNodes.length) {\r\n                    id = defs.childNodes[0].getAttribute(\"id\");\r\n                    this.__ids[id] = id;\r\n                    this.__defs.appendChild(defs.childNodes[0]);\r\n                }\r\n                group = svg.childNodes[1];\r\n                if (group) {\r\n                    //save original transform\r\n                    var originTransform = group.getAttribute(\"transform\");\r\n                    var transformDirective;\r\n                    if (originTransform) {\r\n                        transformDirective = originTransform+\" \"+translateDirective;\r\n                    } else {\r\n                        transformDirective = translateDirective;\r\n                    }\r\n                    group.setAttribute(\"transform\", transformDirective);\r\n                    parent.appendChild(group);\r\n                }\r\n            }\r\n        } else if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\r\n            //canvas or image\r\n            svgImage = this.__createElement(\"image\");\r\n            svgImage.setAttribute(\"width\", dw);\r\n            svgImage.setAttribute(\"height\", dh);\r\n            svgImage.setAttribute(\"preserveAspectRatio\", \"none\");\r\n\r\n            if (sx || sy || sw !== image.width || sh !== image.height) {\r\n                //crop the image using a temporary canvas\r\n                canvas = this.__document.createElement(\"canvas\");\r\n                canvas.width = dw;\r\n                canvas.height = dh;\r\n                context = canvas.getContext(\"2d\");\r\n                context.drawImage(image, sx, sy, sw, sh, 0, 0, dw, dh);\r\n                image = canvas;\r\n            }\r\n            svgImage.setAttribute(\"transform\", translateDirective);\r\n            svgImage.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\r\n                image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\r\n            parent.appendChild(svgImage);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generates a pattern tag\r\n     */\r\n    ctx.prototype.createPattern = function (image, repetition) {\r\n        var pattern = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"pattern\"), id = randomString(this.__ids),\r\n            img;\r\n        pattern.setAttribute(\"id\", id);\r\n        pattern.setAttribute(\"width\", image.width);\r\n        pattern.setAttribute(\"height\", image.height);\r\n        if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\r\n            img = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\r\n            img.setAttribute(\"width\", image.width);\r\n            img.setAttribute(\"height\", image.height);\r\n            img.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\r\n                image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\r\n            pattern.appendChild(img);\r\n            this.__defs.appendChild(pattern);\r\n        } else if (image instanceof ctx) {\r\n            pattern.appendChild(image.__root.childNodes[1]);\r\n            this.__defs.appendChild(pattern);\r\n        }\r\n        return new CanvasPattern(pattern, this);\r\n    };\r\n\r\n    ctx.prototype.setLineDash = function (dashArray) {\r\n        if (dashArray && dashArray.length > 0) {\r\n            this.lineDash = dashArray.join(\",\");\r\n        } else {\r\n            this.lineDash = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Not yet implemented\r\n     */\r\n    ctx.prototype.drawFocusRing = function () {};\r\n    ctx.prototype.createImageData = function () {};\r\n    ctx.prototype.getImageData = function () {};\r\n    ctx.prototype.putImageData = function () {};\r\n    ctx.prototype.globalCompositeOperation = function () {};\r\n    ctx.prototype.setTransform = function () {};\r\n\r\n    //add options for alternative namespace\r\n    if (typeof window === \"object\") {\r\n        window.C2S = ctx;\r\n    }\r\n\r\n    // CommonJS/Browserify\r\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        module.exports = ctx;\r\n    }\r\n\r\n}());"]}