{"version":3,"sources":["pages/qr-code-tools/qr-code-reader/js/qr-code-reader.js"],"names":["initView","cameraId","html5QrCode","Html5Qrcode","getElementById","offsetWidth","offsetHeight","console","readerHeight","log","readerWidth","qrBoxSize","start","qrbox","width","height","fps","decodedText","decodedResult","store","setDecodedInfo","stop","then","ignore","errorMessage","err","addEventListener","document","setDevices","devices","Alpine","selectedDevice","label","undefined","getCameras","this","length","id"],"mappings":"aAAA,SAASA,SAASC,GACd,IAAMC,EAAc,IAAIC,YAAY,UAD/BH,EAASC,SAAUG,eAAA,UAAAC,YAClBH,EAAkBC,SAAAA,eAAqB,UAAAG,aAE7CC,QAAMC,IAAAA,eAAwBJ,GAE9BG,QAAQE,IAAI,gBAAgBC,GAG5B,IAAIC,EAA0B,GAAdD,EAGZC,EAAYH,IAChBG,EAAA,GAAAH,GAGAN,QAAAA,IAAYU,cAERD,GAEIE,EAAOD,MAACE,EAAkBC,CAAoBC,IAAA,GAElDH,MAACI,CAAAA,MAAWN,EAAEO,OAAkBP,IAG5BT,SAAAA,EAAkBgB,GACdX,OAAYY,MAAA,UAAiBC,eAASH,EAAAC,GAEtCX,EAAYc,OAAaC,KAAA,SAAAC,GAC3BhB,QAAAE,IAAA,kBAAAc,KAEN,MAACC,SAAAA,GACeA,QAAAA,IAAY,QAACC,MAI3B,SAAAD,GAEVjB,QAAAE,IAAAe,KAESE,MACQ,SAAAD,GACFlB,QAAGE,IAAAgB,KAFlBE,SAIQC,iBAAUA,cAACC,WAHfC,OAIaD,MAAAA,gBAAiB,CACtBA,QAAKE,CAAAA,CAAAA,GAAAA,GAAcC,MAAGH,KAC1BE,eAAA,GACFH,WAAA,SAAAC,GAEKV,KAAMU,QAAUA,EACnBZ,KAAagB,eAASJ,EAAA,MAD1BC,OAMaZ,MAAAA,SAAgBA,CACzBD,iBAAAgB,EACFf,mBAAAe,EAEF9B,eAAY+B,SAAAA,EAAkBhB,GAC1BiB,KAAAlB,YAAAA,EACRkB,KAAAjB,cAAAA,KAFIf,YAMgBM,aAAca,KAAEO,SAAAA,GAO5BA,GAAAA,EAAAO,SACA7B,QAAAE,IAAA,WAAAoB,GAENC,OAAAX,MAAA,iBAAAS,WAAAC,GANUtB,QAAQE,IAAI,OAAQqB,OAAOX,MAAM,iBAAiBU,QAAQ,GAAGQ,OAEnE,MAAO,SAAAZ","file":"qr-code-reader.js","sourcesContent":["function initView(cameraId) {\r\n    const html5QrCode = new Html5Qrcode(\"reader\");\r\n    const readerWidth = document.getElementById('reader').offsetWidth;\r\n    const readerHeight = document.getElementById('reader').offsetHeight;\r\n\r\n    console.log(\"Reader Width\", readerWidth);\r\n    console.log(\"Reader Height\", readerHeight);\r\n\r\n    let qrBoxSize = readerWidth * 0.8;\r\n\r\n    if (readerHeight < readerWidth) {\r\n        qrBoxSize = readerHeight * 0.8;\r\n    }\r\n    console.log(\"QR Box Size\", qrBoxSize);\r\n\r\n    html5QrCode.start(\r\n        cameraId,\r\n        {\r\n            fps: 10,\r\n            qrbox: {width: qrBoxSize, height: qrBoxSize}  // Optional, if you want bounded box UI\r\n        },\r\n        (decodedText, decodedResult) => {\r\n            Alpine.store('qrCode').setDecodedInfo(decodedText, decodedResult);\r\n\r\n            html5QrCode.stop().then(ignore => {\r\n                console.log(\"QR Code stopped\", ignore);\r\n            }).catch(err => {\r\n                console.log(\"Error\", err);\r\n            });\r\n        },\r\n        (errorMessage) => {\r\n            console.log(errorMessage);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n\r\n}\r\n\r\ndocument.addEventListener('alpine:init', () => {\r\n    Alpine.store('cameraDevices', {\r\n        devices: [{id: '', label: ''}],\r\n        selectedDevice: {},\r\n        setDevices(devices) {\r\n            this.devices = devices;\r\n            this.selectedDevice = devices[0];\r\n        },\r\n    });\r\n\r\n    Alpine.store('qrCode', {\r\n        decodedText: undefined,\r\n        decodedResult: undefined,\r\n\r\n        setDecodedInfo(decodedText, decodedResult) {\r\n            this.decodedText = decodedText;\r\n            this.decodedResult = decodedResult;\r\n        }\r\n    });\r\n    // This method will trigger user permissions\r\n    Html5Qrcode.getCameras().then(devices => {\r\n        /**\r\n         * devices would be an array of objects of type:\r\n         * { id: \"id\", label: \"label\" }\r\n         */\r\n        if (devices && devices.length) {\r\n            console.log(\"Devices:\", devices);\r\n\r\n            Alpine.store('cameraDevices').setDevices(devices);\r\n\r\n            console.log(\"Test\", Alpine.store('cameraDevices').devices[0].id);\r\n        }\r\n    }).catch(err => {\r\n        // console.error('Error')\r\n        // handle err\r\n    });\r\n});"]}